plugins {
    id 'app.cash.exhaustive'
    id 'com.android.application'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp'
}

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    buildFeatures.viewBinding = true
    defaultConfig {
        applicationId "chat.sphinx"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode VERSION_CODE.toInteger()
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments disableAnalytics: 'true'
    }

    // Gradle 4.0's introduction of Google analytics to Android App Developers.
    // https://developer.android.com/studio/releases/gradle-plugin
    dependenciesInfo {
        // Disables dependency metadata when building APKs.
        includeInApk = false
        // Disables dependency metadata when building Android App Bundles.
        includeInBundle = false
    }

    packagingOptions {
        exclude 'META-INF/*.kotlin_module'
        exclude 'META-INF/*.version'
        jniLibs.useLegacyPackaging = true
    }

    buildTypes {
        release {
            resValue "string", "app_name", "Sphinx"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "Sphinx Debug"
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // Needed for Tor
    splits {
        abi {
            enable true
            reset()
            include "x86", "armeabi-v7a", "arm64-v8a", "x86_64"
            universalApk true
        }
    }
    namespace 'chat.sphinx'
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    // KotlinAndroid
    implementation project(path: ':android:features:authentication:android-feature-authentication-core')
    implementation project(path: ':android:features:android-feature-screens')

    // Sphinx
    implementation project(path: ':sphinx:activity:main:activitymain')
    implementation project(path: ':sphinx:activity:features:feature-view-model-coordinator')

    implementation project(path: ':sphinx:application:common:logger')

    implementation project(path: ':sphinx:application:data:features:feature-background-login')
    implementation project(path: ':sphinx:application:data:features:feature-coredb')
    implementation project(path: ':sphinx:application:data:features:crypto:feature-crypto-rsa')
    implementation project(path: ':sphinx:application:data:features:image-loader:feature-image-loader-android')
    implementation project(path: ':sphinx:application:data:features:feature-media-cache')
    implementation project(path: ':sphinx:application:data:features:feature-meme-server')
    implementation project(path: ':sphinx:application:data:features:feature-relay')
    implementation project(path: ':sphinx:application:data:features:feature-wallet')
    implementation project(path: ':sphinx:application:data:features:feature-repository-android')
    implementation project(path: ':sphinx:application:data:features:feature-sphinx-notification-manager')
    implementation project(path: ':sphinx:application:network:features:feature-link-preview')
    implementation project(path: ':sphinx:application:network:features:feature-meme-input-stream')
    implementation project(path: ':sphinx:application:network:features:feature-network-client')
    implementation project(path: ':sphinx:application:network:features:queries:feature-network-query-action-track')
    implementation project(path: ':sphinx:application:network:features:queries:feature-network-query-chat')
    implementation project(path: ':sphinx:application:network:features:queries:feature-network-query-contact')
    implementation project(path: ':sphinx:application:network:features:queries:feature-network-query-invite')
    implementation project(path: ':sphinx:application:network:features:queries:feature-network-query-lightning')
    implementation project(path: ':sphinx:application:network:features:queries:feature-network-query-message')
    implementation project(path: ':sphinx:application:network:features:queries:feature-network-query-subscription')
    implementation project(path: ':sphinx:application:network:features:queries:feature-network-query-meme-server')
    implementation project(path: ':sphinx:application:network:features:queries:feature-network-query-version')
    implementation project(path: ':sphinx:application:network:features:queries:feature-network-query-authorize-external')
    implementation project(path: ':sphinx:application:network:features:queries:feature-network-query-feed-search')
    implementation project(path: ':sphinx:application:network:features:queries:feature-network-query-people')
    implementation project(path: ':sphinx:application:network:features:queries:feature-network-query-redeem-badge-token')
    implementation project(path: ':sphinx:application:network:features:queries:feature-network-query-transport-key')
    implementation project(path: ':sphinx:application:network:features:queries:feature-network-query-crypter')
    implementation project(path: ':sphinx:application:network:features:queries:feature-network-query-discover-tribes')
    implementation project(path: ':sphinx:application:network:features:queries:feature-network-query-feed-status')
    implementation project(path: ':sphinx:application:network:features:feature-network-relay-call')
    implementation project(path: ':sphinx:application:network:features:feature-socket-io')
    implementation project(path: ':sphinx:application:network:features:tor:feature-network-tor')

    implementation project(path: ':sphinx:screens:onboard:key-restore')

    implementation project(path: ':sphinx:service:features:media-player:feature-service-media-player-android')

    // See `/sphinx/service/features/notifications/README.md`
    if (findProperty("SPHINX_COMPILE_PUSH_NOTIFICATION_TYPE") == "firebase") {
        // FirebaseMessaging
        implementation project(path: ':sphinx:service:features:notifications:feature-service-notification-firebase')
    } else {
        implementation project(path: ':sphinx:service:features:notifications:feature-service-notification-empty')
    }

    implementation deps.google.hilt
    kapt kaptDeps.google.hilt

    implementation deps.sqlCipher
    implementation deps.sqlRequery
    implementation deps.square.sqlDelightAndroid
    implementation deps.jna.sdk

    testImplementation project(path: ':kotlin:test:test-concept-coroutines')
    testImplementation project(path: ':sphinx:test:test-tor-manager')
    testImplementation testDeps.robolectric
    testImplementation testDeps.androidx.core

    androidTestImplementation testDeps.androidx.core
    androidTestImplementation testDeps.androidx.espresso
    androidTestImplementation testDeps.androidx.junit
}

/**
 * Requires graphviz to be installed:
 *  - sudo apt-get install graphviz
 *
 * Run:
 *  - ./gradlew :sphinx:application:sphinx:projectDependencyGraph
 * */
apply from: rootProject.file('gradle/projectDependencyGraph.gradle')
